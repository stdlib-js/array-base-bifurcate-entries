{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n// MODULES //\n\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\n\n// MAIN //\n\n/**\n* Splits array element entries into two groups.\n*\n* @param {Collection} x - input array\n* @param {Collection} filter - array indicating which group an element in the input array belongs to\n* @throws {RangeError} must provide arrays having the same length\n* @returns {ArrayArray} results\n*\n* @example\n* var x = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcateEntries( x, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcateEntries( x, filter ) {\n\tvar xget;\n\tvar gget;\n\tvar len;\n\tvar out;\n\tvar g;\n\tvar v;\n\tvar i;\n\n\t// Get the number of elements to group:\n\tlen = x.length;\n\tif ( filter.length !== len ) {\n\t\tthrow new RangeError( format('1n3FI') );\n\t}\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\t// Resolve accessors for retrieving array elements:\n\txget = resolveGetter( x );\n\tgget = resolveGetter( filter );\n\n\t// Loop over the elements and assign each to a group...\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = xget( x, i );\n\t\tg = gget( filter, i );\n\t\tif ( g ) {\n\t\t\tout[ 0 ].push( [ i, v ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, v ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n// EXPORTS //\n\nexport default bifurcateEntries;\n"],"names":["bifurcateEntries","x","filter","xget","gget","len","out","v","i","length","RangeError","format","resolveGetter","push"],"mappings":";;qMA2CA,SAASA,EAAkBC,EAAGC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAIJ,GADAH,EAAMJ,EAAEQ,OACHP,EAAOO,SAAWJ,EACtB,MAAM,IAAIK,WAAYC,EAAO,UAE9B,GAAa,IAARN,EACJ,MAAO,GAQR,IALAF,EAAOS,EAAeX,GACtBG,EAAOQ,EAAeV,GAGtBI,EAAM,CAAE,GAAI,IACNE,EAAI,EAAGA,EAAIH,EAAKG,IACrBD,EAAIJ,EAAMF,EAAGO,GACTJ,EAAMF,EAAQM,GAEjBF,EAAK,GAAIO,KAAM,CAAEL,EAAGD,IAEpBD,EAAK,GAAIO,KAAM,CAAEL,EAAGD,IAGtB,OAAOD,CACR"}